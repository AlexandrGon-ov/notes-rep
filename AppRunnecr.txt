ppackage ru.alex.goncharov.db;

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.*;
import javafx.stage.*;
import javafx.scene.layout.*;
import javafx.scene.control.*;
import javafx.geometry.*;
import org.hibernate.Query;
import org.hibernate.Session;
import ru.alex.goncharov.ui.components.UserNotes;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;


public class AppRunner extends Application {

    protected Button createButton;
    protected TextArea textArea;
    protected NewWindow newWindow;
    protected Stage secondStage;
    protected static TableView<UserNote> table;
    protected UserTable newTable;
    protected ObservableList<UserNote> userNotesTableContent = FXCollections.observableArrayList();
    protected List<UserNote> userList = new ArrayList<>();
    protected UserNote loadedNote;
    protected List loadedList;


    public static void main(String[] args) {
        launch(args);
    }

    public void init() {
        getUser();
        newTable = new UserTable();
        table = newTable.createTable();
        userNotesTableContent.addAll(userList);
        table.setItems(userNotesTableContent);
    }

    public void start(Stage myStage) {
        myStage.setTitle("Notes");

        StackPane root = new StackPane();
        root.setPadding(new Insets(5));
        root.getChildren().add(table);

        createButton = new Button("Create a new note");
        createButton.setOnAction(event -> {
            newWindow = new NewWindow(userNotesTableContent);
            secondStage = newWindow.createNewWindow();
            secondStage.initOwner(myStage);
            secondStage.show();
        });

        root.setAlignment(Pos.TOP_RIGHT);
        root.getChildren().add(createButton);

        myStage.setTitle("Заметки");

        Scene myScene = new Scene(root, 450, 300);
        myStage.setScene(myScene);

        myStage.setScene(myScene);
        myStage.show();
    }

    void getUser() {

        Session session = HibernateSessionFactory.getSessionFactory().openSession();
        session.beginTransaction();

        Query query = session.createQuery("from UserNote where id > 0");
        loadedList = query.list();

        for (int i = 1; i <= loadedList.size(); i++) {
            loadedNote = session.load(UserNote.class, i);
            String getNoteFromSqlTable = loadedNote.getUsrNote();
            String detDescriptionFromSqlTable = loadedNote.getDescription();
            Date getDateFromSqlTable = loadedNote.getDate();

            UserNotes userNote = new UserNotes(getNoteFromSqlTable, detDescriptionFromSqlTable, getDateFromSqlTable);
            userList.add(userNote);
        }
        session.close();

    }
}
